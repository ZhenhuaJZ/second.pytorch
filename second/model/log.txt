model: {
  second: {
    voxel_generator {
      point_cloud_range : [0, -39.68, -3, 69.12, 39.68, 1]
      voxel_size : [0.16, 0.16, 4]
      max_number_of_points_per_voxel : 100
    }
    num_class: 1
    voxel_feature_extractor: {
      module_class_name: "PillarFeatureNet"
      num_filters: [64]
      with_distance: false
    }
    middle_feature_extractor: {
      module_class_name: "PointPillarsScatter"
    }
    rpn: {
      module_class_name: "RPN"
      layer_nums: [3, 5, 5]
      layer_strides: [2, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [1, 2, 4]
      num_upsample_filters: [128, 128, 128]
      use_groupnorm: false
      num_groups: 32
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true

    use_direction_classifier: true
    direction_loss_weight: 0.2
    use_aux_classifier: false
    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [0, -39.68, -5, 69.12, 39.68, 5]
    use_rotate_nms: false
    use_multi_class_nms: false
    nms_pre_max_size: 1000
    nms_post_max_size: 300
    nms_score_threshold: 0.05
    nms_iou_threshold: 0.5

    use_bev: false
    num_point_features: 4
    without_reflectivity: false
    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      anchor_generators: {
         anchor_generator_stride: {
           sizes: [1.6, 3.9, 1.56] # wlh
           strides: [0.32, 0.32, 0.0] # if generate only 1 z_center, z_stride will be ignored
           offsets: [0.16, -39.52, -1.78] # origin_offset + strides / 2
           rotations: [0, 1.57] # 0, pi/2
           matched_threshold : 0.6
           unmatched_threshold : 0.45
         }
       }

      sample_positive_fraction : -1
      sample_size : 512
      region_similarity_calculator: {
        nearest_iou_similarity: {
        }
      }
    }
  }
}


train_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_train.tfrecord"
  class_names: ["Car"]
  max_num_epochs : 160
  batch_size: 2
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: true
  num_workers: 2
  groundtruth_localization_noise_std: [0.25, 0.25, 0.25]
  groundtruth_rotation_uniform_noise: [-0.15707963267, 0.15707963267]
  global_rotation_uniform_noise: [-0.78539816, 0.78539816]
  global_scaling_uniform_noise: [0.95, 1.05]
  global_random_rotation_range_per_object: [0, 0]
  anchor_area_threshold: 1
  remove_points_after_sample: false
  groundtruth_points_drop_percentage: 0.0
  groundtruth_drop_max_keep_points: 15
  database_sampler {
    database_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_dbinfos_train.pkl"
    sample_groups {
      name_to_max_num {
        key: "Car"
        value: 15
      }
    }
    database_prep_steps {
      filter_by_min_num_points {
        min_num_point_pairs {
          key: "Car"
          value: 5
        }
      }
    }
    database_prep_steps {
      filter_by_difficulty {
        removed_difficulties: [-1]
      }
    }
    global_random_rotation_range_per_object: [0, 0]
    rate: 1.0
  }

  remove_unknown_examples: false
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_train.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

train_config: {
  optimizer: {
    adam_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate: {
          initial_learning_rate: 0.0002
          decay_steps: 27840 # 1856 steps per epoch * 15 epochs
          decay_factor: 0.8
          staircase: true
        }
      }
      weight_decay: 0.0001
    }
    use_moving_average: false

  }
  inter_op_parallelism_threads: 4
  intra_op_parallelism_threads: 4
  steps: 296960 # 1856 steps per epoch * 160 epochs
  steps_per_eval: 9280 # 1856 steps per epoch * 5 epochs
  save_checkpoints_secs : 1800 # half hour
  save_summary_steps : 10
  enable_mixed_precision: false
  loss_scale_factor : 512.0
  clear_metrics_every_epoch: false
}

eval_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_val.tfrecord"
  class_names: ["Car"]
  batch_size: 2
  max_num_epochs : 160
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: false
  num_workers: 3
  anchor_area_threshold: 1
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_val.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

model: {
  second: {
    voxel_generator {
      point_cloud_range : [0, -39.68, -3, 69.12, 39.68, 1]
      voxel_size : [0.16, 0.16, 4]
      max_number_of_points_per_voxel : 100
    }
    num_class: 1
    voxel_feature_extractor: {
      module_class_name: "PillarFeatureNet"
      num_filters: [64]
      with_distance: false
    }
    middle_feature_extractor: {
      module_class_name: "PointPillarsScatter"
    }
    rpn: {
      module_class_name: "RPN"
      layer_nums: [3, 5, 5]
      layer_strides: [2, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [1, 2, 4]
      num_upsample_filters: [128, 128, 128]
      use_groupnorm: false
      num_groups: 32
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true

    use_direction_classifier: true
    direction_loss_weight: 0.2
    use_aux_classifier: false
    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [0, -39.68, -5, 69.12, 39.68, 5]
    use_rotate_nms: false
    use_multi_class_nms: false
    nms_pre_max_size: 1000
    nms_post_max_size: 300
    nms_score_threshold: 0.05
    nms_iou_threshold: 0.5

    use_bev: false
    num_point_features: 4
    without_reflectivity: false
    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      anchor_generators: {
         anchor_generator_stride: {
           sizes: [1.6, 3.9, 1.56] # wlh
           strides: [0.32, 0.32, 0.0] # if generate only 1 z_center, z_stride will be ignored
           offsets: [0.16, -39.52, -1.78] # origin_offset + strides / 2
           rotations: [0, 1.57] # 0, pi/2
           matched_threshold : 0.6
           unmatched_threshold : 0.45
         }
       }

      sample_positive_fraction : -1
      sample_size : 512
      region_similarity_calculator: {
        nearest_iou_similarity: {
        }
      }
    }
  }
}


train_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_train.tfrecord"
  class_names: ["Car"]
  max_num_epochs : 160
  batch_size: 2
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: true
  num_workers: 2
  groundtruth_localization_noise_std: [0.25, 0.25, 0.25]
  groundtruth_rotation_uniform_noise: [-0.15707963267, 0.15707963267]
  global_rotation_uniform_noise: [-0.78539816, 0.78539816]
  global_scaling_uniform_noise: [0.95, 1.05]
  global_random_rotation_range_per_objemodel: {
  second: {
    voxel_generator {
      point_cloud_range : [0, -39.68, -3, 69.12, 39.68, 1]
      voxel_size : [0.16, 0.16, 4]
      max_number_of_points_per_voxel : 100
    }
    num_class: 1
    voxel_feature_extractor: {
      module_class_name: "PillarFeatureNet"
      num_filters: [64]
      with_distance: false
    }
    middle_feature_extractor: {
      module_class_name: "PointPillarsScatter"
    }
    rpn: {
      module_class_name: "RPN"
      layer_nums: [3, 5, 5]
      layer_strides: [2, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [1, 2, 4]
      num_upsample_filters: [128, 128, 128]
      use_groupnorm: false
      num_groups: 32
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true

    use_direction_classifier: true
    direction_loss_weight: 0.2
    use_aux_classifier: false
    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [0, -39.68, -5, 69.12, 39.68, 5]
    use_rotate_nms: false
    use_multi_class_nms: false
    nms_pre_max_size: 1000
    nms_post_max_size: 300
    nms_score_threshold: 0.05
    nms_iou_threshold: 0.5

    use_bev: false
    num_point_features: 4
    without_reflectivity: false
    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      anchor_generators: {
         anchor_generator_stride: {
           sizes: [1.6, 3.9, 1.56] # wlh
           strides: [0.32, 0.32, 0.0] # if generate only 1 z_center, z_stride will be ignored
           offsets: [0.16, -39.52, -1.78] # origin_offset + strides / 2
           rotations: [0, 1.57] # 0, pi/2
           matched_threshold : 0.6
           unmatched_threshold : 0.45
         }
       }

      sample_positive_fraction : -1
      sample_size : 512
      region_similarity_calculator: {
        nearest_iou_similarity: {
        }
      }
    }
  }
}


train_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_train.tfrecord"
  class_names: ["Car"]
  max_num_epochs : 160
  batch_size: 2
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: true
  num_workers: 2
  groundtruth_localization_noise_std: [0.25, 0.25, 0.25]
  groundtruth_rotation_uniform_noise: [-0.15707963267, 0.15707963267]
  global_rotation_uniform_noise: [-0.78539816, 0.78539816]
  global_scaling_uniform_noise: [0.95, 1.05]
  global_random_rotation_range_per_object: [0, 0]
  anchor_area_threshold: 1
  remove_points_after_sample: false
  groundtruth_points_drop_percentage: 0.0
  groundtruth_drop_max_keep_points: 15
  database_sampler {
    database_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_dbinfos_train.pkl"
    sample_groups {
      name_to_max_num {
        key: "Car"
        value: 15
      }
    }
    database_prep_steps {
      filter_by_min_num_points {
        min_num_point_pairs {
          key: "Car"
          value: 5
        }
      }
    }
    database_prep_steps {
      filter_by_difficulty {
        removed_difficulties: [-1]
      }
    }
    global_random_rotation_range_per_object: [0, 0]
    rate: 1.0
  }

  remove_unknown_examples: false
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_train.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

train_config: {
  optimizer: {
    adam_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate: {
          initial_learning_rate: 0.0002
          decay_steps: 27840 # 1856 steps per epoch * 15 epochs
          decay_factor: 0.8
          staircase: true
        }
      }
      weight_decay: 0.0001
    }
    use_moving_average: false

  }
  inter_op_parallelism_threads: 4
  intra_op_parallelism_threads: 4
  steps: 296960 # 1856 steps per epoch * 160 epochs
  steps_per_eval: 9280 # 1856 steps per epoch * 5 epochs
  save_checkpoints_secs : 1800 # half hour
  save_summary_steps : 10
  enable_mixed_precision: false
  loss_scale_factor : 512.0
  clear_metrics_every_epoch: false
}

eval_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_val.tfrecord"
  class_names: ["Car"]
  batch_size: 2
  max_num_epochs : 160
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: false
  num_workers: 3
  anchor_area_threshold: 1
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_val.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

step=50, steptime=0.517, cls_loss=3.75, cls_loss_rt=0.606, loc_loss=2.09, loc_loss_rt=1.41, rpn_acc=0.977, prec@10=0.004, rec@10=0.812, prec@30=0.00332, rec@30=0.0968, prec@50=0.00372, rec@50=0.0209, prec@70=0.00857, rec@70=0.00165, prec@80=0.0146, rec@80=0.000329, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0354, 0.036, 0.171, 0.0292, 0.0569, 0.0545, 0.324], loss.cls_pos_rt=0.516, loss.cls_neg_rt=0.0894, loss.dir_rt=0.632, num_vox=12148, num_pos=88, num_neg=26391, num_anchors=26617, lr=0.0002, image_idx=2983
step=100, steptime=0.509, cls_loss=2.19, cls_loss_rt=0.622, loc_loss=1.67, loc_loss_rt=1.31, rpn_acc=0.987, prec@10=0.00521, rec@10=0.692, prec@30=0.00331, rec@30=0.0477, prec@50=0.00372, rec@50=0.0103, prec@70=0.00857, rec@70=0.00081, prec@80=0.0146, rec@80=0.000162, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0328, 0.0348, 0.174, 0.0397, 0.0558, 0.0368, 0.284], loss.cls_pos_rt=0.491, loss.cls_neg_rt=0.131, loss.dir_rt=0.682, num_vox=13475, num_pos=82, num_neg=18879, num_anchors=19079, lr=0.0002, image_idx=4755
model: {
  second: {
    voxel_generator {
      point_cloud_range : [0, -39.68, -3, 69.12, 39.68, 1]
      voxel_size : [0.16, 0.16, 4]
      max_number_of_points_per_voxel : 100
    }
    num_class: 1
    voxel_feature_extractor: {
      module_class_name: "PillarFeatureNet"
      num_filters: [64]
      with_distance: false
    }
    middle_feature_extractor: {
      module_class_name: "PointPillarsScatter"
    }
    rpn: {
      module_class_name: "RPN"
      layer_nums: [3, 5, 5]
      layer_strides: [2, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [1, 2, 4]
      num_upsample_filters: [128, 128, 128]
      use_groupnorm: false
      num_groups: 32
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true

    use_direction_classifier: true
    direction_loss_weight: 0.2
    use_aux_classifier: false
    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [0, -39.68, -5, 69.12, 39.68, 5]
    use_rotate_nms: false
    use_multi_class_nms: false
    nms_pre_max_size: 1000
    nms_post_max_size: 300
    nms_score_threshold: 0.05
    nms_iou_threshold: 0.5

    use_bev: false
    num_point_features: 4
    without_reflectivity: false
    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      anchor_generators: {
         anchor_generator_stride: {
           sizes: [1.6, 3.9, 1.56] # wlh
           strides: [0.32, 0.32, 0.0] # if generate only 1 z_center, z_stride will be ignored
           offsets: [0.16, -39.52, -1.78] # origin_offset + strides / 2
           rotations: [0, 1.57] # 0, pi/2
           matched_threshold : 0.6
           unmatched_threshold : 0.45
         }
       }

      sample_positive_fraction : -1
      sample_size : 512
      region_similarity_calculator: {
        nearest_iou_similarity: {
        }
      }
    }
  }
}


train_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_train.tfrecord"
  class_names: ["Car"]
  max_num_epochs : 160
  batch_size: 2
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: true
  num_workers: 2
  groundtruth_localization_noise_std: [0.25, 0.25, 0.25]
  groundtruth_rotation_uniform_noise: [-0.15707963267, 0.15707963267]
  global_rotation_uniform_noise: [-0.78539816, 0.78539816]
  global_scaling_uniform_noise: [0.95, 1.05]
  global_random_rotation_range_per_object: [0, 0]
  anchor_area_threshold: 1
  remove_points_after_sample: false
  groundtruth_points_drop_percentage: 0.0
  groundtruth_drop_max_keep_points: 15
  database_sampler {
    database_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_dbinfos_train.pkl"
    sample_groups {
      name_to_max_num {
        key: "Car"
        value: 15
      }
    }
    database_prep_steps {
      filter_by_min_num_points {
        min_num_point_pairs {
          key: "Car"
          value: 5
        }
      }
    }
    database_prep_steps {
      filter_by_difficulty {
        removed_difficulties: [-1]
      }
    }
    global_random_rotation_range_per_object: [0, 0]
    rate: 1.0
  }

  remove_unknown_examples: false
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_train.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

train_config: {
  optimizer: {
    adam_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate: {
          initial_learning_rate: 0.0002
          decay_steps: 27840 # 1856 steps per epoch * 15 epochs
          decay_factor: 0.8
          staircase: true
        }
      }
      weight_decay: 0.0001
    }
    use_moving_average: false

  }
  inter_op_parallelism_threads: 4
  intra_op_parallelism_threads: 4
  steps: 296960 # 1856 steps per epoch * 160 epochs
  steps_per_eval: 9280 # 1856 steps per epoch * 5 epochs
  save_checkpoints_secs : 1800 # half hour
  save_summary_steps : 10
  enable_mixed_precision: false
  loss_scale_factor : 512.0
  clear_metrics_every_epoch: false
}

eval_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_val.tfrecord"
  class_names: ["Car"]
  batch_size: 2
  max_num_epochs : 160
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: false
  num_workers: 3
  anchor_area_threshold: 1
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_val.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

step=50, steptime=0.521, cls_loss=3.58, cls_loss_rt=0.721, loc_loss=2.19, loc_loss_rt=1.42, rpn_acc=0.978, prec@10=0.0039, rec@10=0.757, prec@30=0.003, rec@30=0.0824, prec@50=0.00276, rec@50=0.0138, prec@70=0.00215, rec@70=0.000109, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0438, 0.0288, 0.214, 0.0353, 0.0695, 0.0447, 0.275], loss.cls_pos_rt=0.417, loss.cls_neg_rt=0.303, loss.dir_rt=0.726, num_vox=14792, num_pos=92, num_neg=37865, num_anchors=38083, lr=0.0002, image_idx=5066
model: {
  second: {
    voxel_generator {
      point_cloud_range : [0, -39.68, -3, 69.12, 39.68, 1]
      voxel_size : [0.16, 0.16, 4]
      max_number_of_points_per_voxel : 100
    }
    num_class: 1
    voxel_feature_extractor: {
      module_class_name: "PillarFeatureNet"
      num_filters: [64]
      with_distance: false
    }
    middle_feature_extractor: {
      module_class_name: "PointPillarsScatter"
    }
    rpn: {
      module_class_name: "RPN"
      layer_nums: [3, 5, 5]
      layer_strides: [2, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [1, 2, 4]
      num_upsample_filters: [128, 128, 128]
      use_groupnorm: false
      num_groups: 32
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true

    use_direction_classifier: true
    direction_loss_weight: 0.2
    use_aux_classifier: false
    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [0, -39.68, -5, 69.12, 39.68, 5]
    use_rotate_nms: false
    use_multi_class_nms: false
    nms_pre_max_size: 1000
    nms_post_max_size: 300
    nms_score_threshold: 0.05
    nms_iou_threshold: 0.5

    use_bev: false
    num_point_features: 4
    without_reflectivity: false
    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      anchor_generators: {
         anchor_generator_stride: {
           sizes: [1.6, 3.9, 1.56] # wlh
           strides: [0.32, 0.32, 0.0] # if generate only 1 z_center, z_stride will be ignored
           offsets: [0.16, -39.52, -1.78] # origin_offset + strides / 2
           rotations: [0, 1.57] # 0, pi/2
           matched_threshold : 0.6
           unmatched_threshold : 0.45
         }
       }

      sample_positive_fraction : -1
      sample_size : 512
      region_similarity_calculator: {
        nearest_iou_similarity: {
        }
      }
    }
  }
}


train_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_train.tfrecord"
  class_names: ["Car"]
  max_num_epochs : 160
  batch_size: 2
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: true
  num_workers: 2
  groundtruth_localization_noise_std: [0.25, 0.25, 0.25]
  groundtruth_rotation_uniform_noise: [-0.15707963267, 0.15707963267]
  global_rotation_uniform_noise: [-0.78539816, 0.78539816]
  global_scaling_uniform_noise: [0.95, 1.05]
  global_random_rotation_range_per_object: [0, 0]
  anchor_area_threshold: 1
  remove_points_after_sample: false
  groundtruth_points_drop_percentage: 0.0
  groundtruth_drop_max_keep_points: 15
  database_sampler {
    database_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_dbinfos_train.pkl"
    sample_groups {
      name_to_max_num {
        key: "Car"
        value: 15
      }
    }
    database_prep_steps {
      filter_by_min_num_points {
        min_num_point_pairs {
          key: "Car"
          value: 5
        }
      }
    }
    database_prep_steps {
      filter_by_difficulty {
        removed_difficulties: [-1]
      }
    }
    global_random_rotation_range_per_object: [0, 0]
    rate: 1.0
  }

  remove_unknown_examples: false
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_train.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

train_config: {
  optimizer: {
    adam_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate: {
          initial_learning_rate: 0.0002
          decay_steps: 27840 # 1856 steps per epoch * 15 epochs
          decay_factor: 0.8
          staircase: true
        }
      }
      weight_decay: 0.0001
    }
    use_moving_average: false

  }
  inter_op_parallelism_threads: 4
  intra_op_parallelism_threads: 4
  steps: 296960 # 1856 steps per epoch * 160 epochs
  steps_per_eval: 9280 # 1856 steps per epoch * 5 epochs
  save_checkpoints_secs : 1800 # half hour
  save_summary_steps : 10
  enable_mixed_precision: false
  loss_scale_factor : 512.0
  clear_metrics_every_epoch: false
}

eval_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_val.tfrecord"
  class_names: ["Car"]
  batch_size: 2
  max_num_epochs : 160
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: false
  num_workers: 3
  anchor_area_threshold: 1
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_val.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

model: {
  second: {
    voxel_generator {
      point_cloud_range : [0, -39.68, -3, 69.12, 39.68, 1]
      voxel_size : [0.16, 0.16, 4]
      max_number_of_points_per_voxel : 100
    }
    num_class: 1
    voxel_feature_extractor: {
      module_class_name: "PillarFeatureNet"
      num_filters: [64]
      with_distance: false
    }
    middle_feature_extractor: {
      module_class_name: "PointPillarsScatter"
    }
    rpn: {
      module_class_name: "RPN"
      layer_nums: [3, 5, 5]
      layer_strides: [2, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [1, 2, 4]
      num_upsample_filters: [128, 128, 128]
      use_groupnorm: false
      num_groups: 32
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true

    use_direction_classifier: true
    direction_loss_weight: 0.2
    use_aux_classifier: false
    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [0, -39.68, -5, 69.12, 39.68, 5]
    use_rotate_nms: false
    use_multi_class_nms: false
    nms_pre_max_size: 1000
    nms_post_max_size: 300
    nms_score_threshold: 0.05
    nms_iou_threshold: 0.5

    use_bev: false
    num_point_features: 4
    without_reflectivity: false
    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      anchor_generators: {
         anchor_generator_stride: {
           sizes: [1.6, 3.9, 1.56] # wlh
           strides: [0.32, 0.32, 0.0] # if generate only 1 z_center, z_stride will be ignored
           offsets: [0.16, -39.52, -1.78] # origin_offset + strides / 2
           rotations: [0, 1.57] # 0, pi/2
           matched_threshold : 0.6
           unmatched_threshold : 0.45
         }
       }

      sample_positive_fraction : -1
      sample_size : 512
      region_similarity_calculator: {
        nearest_iou_similarity: {
        }
      }
    }
  }
}


train_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_train.tfrecord"
  class_names: ["Car"]
  max_num_epochs : 160
  batch_size: 2
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: true
  num_workers: 2
  groundtruth_localization_noise_std: [0.25, 0.25, 0.25]
  groundtruth_rotation_uniform_noise: [-0.15707963267, 0.15707963267]
  global_rotation_uniform_noise: [-0.78539816, 0.78539816]
  global_scaling_uniform_noise: [0.95, 1.05]
  global_random_rotation_range_per_object: [0, 0]
  anchor_area_threshold: 1
  remove_points_after_sample: false
  groundtruth_points_drop_percentage: 0.0
  groundtruth_drop_max_keep_points: 15
  database_sampler {
    database_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_dbinfos_train.pkl"
    sample_groups {
      name_to_max_num {
        key: "Car"
        value: 15
      }
    }
    database_prep_steps {
      filter_by_min_num_points {
        min_num_point_pairs {
          key: "Car"
          value: 5
        }
      }
    }
    database_prep_steps {
      filter_by_difficulty {
        removed_difficulties: [-1]
      }
    }
    global_random_rotation_range_per_object: [0, 0]
    rate: 1.0
  }

  remove_unknown_examples: false
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_train.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

train_config: {
  optimizer: {
    adam_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate: {
          initial_learning_rate: 0.0002
          decay_steps: 27840 # 1856 steps per epoch * 15 epochs
          decay_factor: 0.8
          staircase: true
        }
      }
      weight_decay: 0.0001
    }
    use_moving_average: false

  }
  inter_op_parallelism_threads: 4
  intra_op_parallelism_threads: 4
  steps: 296960 # 1856 steps per epoch * 160 epochs
  steps_per_eval: 9280 # 1856 steps per epoch * 5 epochs
  save_checkpoints_secs : 1800 # half hour
  save_summary_steps : 10
  enable_mixed_precision: false
  loss_scale_factor : 512.0
  clear_metrics_every_epoch: false
}

eval_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_val.tfrecord"
  class_names: ["Car"]
  batch_size: 2
  max_num_epochs : 160
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: false
  num_workers: 3
  anchor_area_threshold: 1
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_val.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

step=50, steptime=0.514, cls_loss=3.17, cls_loss_rt=0.639, loc_loss=2.21, loc_loss_rt=1.45, rpn_acc=0.984, prec@10=0.004, rec@10=0.705, prec@30=0.00254, rec@30=0.0708, prec@50=0.00195, rec@50=0.0069, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.047, 0.0279, 0.154, 0.0461, 0.0637, 0.0569, 0.332], loss.cls_pos_rt=0.423, loss.cls_neg_rt=0.216, loss.dir_rt=0.694, num_vox=14236, num_pos=87, num_neg=30561, num_anchors=30787, lr=0.0002, image_idx=5964
step=100, steptime=0.475, cls_loss=1.88, cls_loss_rt=0.587, loc_loss=1.73, loc_loss_rt=1.23, rpn_acc=0.99, prec@10=0.00593, rec@10=0.67, prec@30=0.00255, rec@30=0.0358, prec@50=0.00195, rec@50=0.00346, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0305, 0.0242, 0.21, 0.0311, 0.0723, 0.0355, 0.209], loss.cls_pos_rt=0.469, loss.cls_neg_rt=0.118, loss.dir_rt=0.675, num_vox=12861, num_pos=93, num_neg=17576, num_anchors=17795, lr=0.0002, image_idx=1811
step=150, steptime=0.516, cls_loss=1.43, cls_loss_rt=0.58, loc_loss=1.52, loc_loss_rt=1.16, rpn_acc=0.992, prec@10=0.00765, rec@10=0.667, prec@30=0.00274, rec@30=0.0255, prec@50=0.00195, rec@50=0.00229, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0259, 0.0223, 0.141, 0.0326, 0.0618, 0.0365, 0.262], loss.cls_pos_rt=0.379, loss.cls_neg_rt=0.201, loss.dir_rt=0.663, num_vox=16008, num_pos=98, num_neg=29511, num_anchors=29753, lr=0.0002, image_idx=3985
step=200, steptime=0.484, cls_loss=1.2, cls_loss_rt=0.465, loc_loss=1.39, loc_loss_rt=1.04, rpn_acc=0.993, prec@10=0.00932, rec@10=0.678, prec@30=0.00381, rec@30=0.0265, prec@50=0.00195, rec@50=0.00171, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0261, 0.0189, 0.154, 0.0299, 0.042, 0.0426, 0.204], loss.cls_pos_rt=0.43, loss.cls_neg_rt=0.0349, loss.dir_rt=0.683, num_vox=7477, num_pos=95, num_neg=14647, num_anchors=14891, lr=0.0002, image_idx=6179
step=250, steptime=0.527, cls_loss=1.06, cls_loss_rt=0.492, loc_loss=1.29, loc_loss_rt=0.958, rpn_acc=0.994, prec@10=0.0109, rec@10=0.687, prec@30=0.00573, rec@30=0.0319, prec@50=0.00195, rec@50=0.00136, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0238, 0.027, 0.115, 0.0221, 0.0379, 0.0368, 0.216], loss.cls_pos_rt=0.348, loss.cls_neg_rt=0.144, loss.dir_rt=0.693, num_vox=16543, num_pos=113, num_neg=34730, num_anchors=35020, lr=0.0002, image_idx=1761
step=300, steptime=0.491, cls_loss=0.958, cls_loss_rt=0.481, loc_loss=1.21, loc_loss_rt=0.908, rpn_acc=0.994, prec@10=0.0123, rec@10=0.692, prec@30=0.00792, rec@30=0.037, prec@50=0.00195, rec@50=0.00113, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0273, 0.0155, 0.135, 0.0277, 0.0462, 0.0494, 0.153], loss.cls_pos_rt=0.419, loss.cls_neg_rt=0.0628, loss.dir_rt=0.664, num_vox=10745, num_pos=111, num_neg=18993, num_anchors=19280, lr=0.0002, image_idx=5670
step=350, steptime=0.494, cls_loss=0.887, cls_loss_rt=0.454, loc_loss=1.16, loc_loss_rt=0.746, rpn_acc=0.995, prec@10=0.0135, rec@10=0.698, prec@30=0.0106, rec@30=0.0428, prec@50=0.00195, rec@50=0.000971, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.019, 0.0175, 0.0956, 0.015, 0.0414, 0.0284, 0.156], loss.cls_pos_rt=0.313, loss.cls_neg_rt=0.141, loss.dir_rt=0.66, num_vox=12679, num_pos=92, num_neg=31320, num_anchors=31558, lr=0.0002, image_idx=4375
step=400, steptime=0.512, cls_loss=0.831, cls_loss_rt=0.426, loc_loss=1.12, loc_loss_rt=0.784, rpn_acc=0.995, prec@10=0.0147, rec@10=0.705, prec@30=0.0145, rec@30=0.0515, prec@50=0.00195, rec@50=0.000851, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0262, 0.00809, 0.125, 0.0126, 0.0392, 0.0216, 0.16], loss.cls_pos_rt=0.348, loss.cls_neg_rt=0.0777, loss.dir_rt=0.637, num_vox=11484, num_pos=93, num_neg=21315, num_anchors=21550, lr=0.0002, image_idx=4468
step=450, steptime=0.477, cls_loss=0.786, cls_loss_rt=0.444, loc_loss=1.08, loc_loss_rt=0.802, rpn_acc=0.995, prec@10=0.0158, rec@10=0.714, prec@30=0.0187, rec@30=0.0599, prec@50=0.00195, rec@50=0.000759, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0128, 0.0192, 0.127, 0.0205, 0.0391, 0.0316, 0.151], loss.cls_pos_rt=0.36, loss.cls_neg_rt=0.0849, loss.dir_rt=0.658, num_vox=13056, num_pos=98, num_neg=35495, num_anchors=35740, lr=0.0002, image_idx=7432
step=500, steptime=0.503, cls_loss=0.749, cls_loss_rt=0.46, loc_loss=1.05, loc_loss_rt=0.819, rpn_acc=0.995, prec@10=0.0169, rec@10=0.722, prec@30=0.0237, rec@30=0.0692, prec@50=0.00195, rec@50=0.000684, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0173, 0.0136, 0.118, 0.041, 0.0471, 0.0423, 0.13], loss.cls_pos_rt=0.394, loss.cls_neg_rt=0.0657, loss.dir_rt=0.689, num_vox=12545, num_pos=105, num_neg=23992, num_anchors=24284, lr=0.0002, image_idx=5438
step=550, steptime=0.516, cls_loss=0.718, cls_loss_rt=0.323, loc_loss=1.02, loc_loss_rt=0.685, rpn_acc=0.995, prec@10=0.0179, rec@10=0.73, prec@30=0.0289, rec@30=0.0775, prec@50=0.00195, rec@50=0.000622, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0123, 0.0103, 0.107, 0.0163, 0.0363, 0.0356, 0.125], loss.cls_pos_rt=0.266, loss.cls_neg_rt=0.0565, loss.dir_rt=0.662, num_vox=10594, num_pos=116, num_neg=23367, num_anchors=23660, lr=0.0002, image_idx=1413
step=600, steptime=0.52, cls_loss=0.691, cls_loss_rt=0.384, loc_loss=0.995, loc_loss_rt=0.674, rpn_acc=0.995, prec@10=0.0189, rec@10=0.736, prec@30=0.0355, rec@30=0.0886, prec@50=0.00195, rec@50=0.00057, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0128, 0.0138, 0.0927, 0.0413, 0.0371, 0.0295, 0.11], loss.cls_pos_rt=0.306, loss.cls_neg_rt=0.0781, loss.dir_rt=0.674, num_vox=13421, num_pos=100,model: {
  second: {
    voxel_generator {
      point_cloud_range : [0, -39.68, -3, 69.12, 39.68, 1]
      voxel_size : [0.16, 0.16, 4]
      max_number_of_points_per_voxel : 100
    }
    num_class: 1
    voxel_feature_extractor: {
      module_class_name: "PillarFeatureNet"
      num_filters: [64]
      with_distance: false
    }
    middle_feature_extractor: {
      module_class_name: "PointPillarsScatter"
    }
    rpn: {
      module_class_name: "RPN"
      layer_nums: [3, 5, 5]
      layer_strides: [2, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [1, 2, 4]
      num_upsample_filters: [128, 128, 128]
      use_groupnorm: false
      num_groups: 32
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true

    use_direction_classifier: true
    direction_loss_weight: 0.2
    use_aux_classifier: false
    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [0, -39.68, -5, 69.12, 39.68, 5]
    use_rotate_nms: false
    use_multi_class_nms: false
    nms_pre_max_size: 1000
    nms_post_max_size: 300
    nms_score_threshold: 0.05
    nms_iou_threshold: 0.5

    use_bev: false
    num_point_features: 4
    without_reflectivity: false
    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      anchor_generators: {
         anchor_generator_stride: {
           sizes: [1.6, 3.9, 1.56] # wlh
           strides: [0.32, 0.32, 0.0] # if generate only 1 z_center, z_stride will be ignored
           offsets: [0.16, -39.52, -1.78] # origin_offset + strides / 2
           rotations: [0, 1.57] # 0, pi/2
           matched_threshold : 0.6
           unmatched_threshold : 0.45
         }
       }

      sample_positive_fraction : -1
      sample_size : 512
      region_similarity_calculator: {
        nearest_iou_similarity: {
        }
      }
    }
  }
}


train_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_train.tfrecord"
  class_names: ["Car"]
  max_num_epochs : 160
  batch_size: 2
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: true
  num_workers: 2
  groundtruth_localization_noise_std: [0.25, 0.25, 0.25]
  groundtruth_rotation_uniform_noise: [-0.15707963267, 0.15707963267]
  global_rotation_uniform_noise: [-0.78539816, 0.78539816]
  global_scaling_uniform_noise: [0.95, 1.05]
  global_random_rotation_range_per_object: [0, 0]
  anchor_area_threshold: 1
  remove_points_after_sample: false
  groundtruth_points_drop_percentage: 0.0
  groundtruth_drop_max_keep_points: 15
  database_sampler {
    database_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_dbinfos_train.pkl"
    sample_groups {
      name_to_max_num {
        key: "Car"
        value: 15
      }
    }
    database_prep_steps {
      filter_by_min_num_points {
        min_num_point_pairs {
          key: "Car"
          value: 5
        }
      }
    }
    database_prep_steps {
      filter_by_difficulty {
        removed_difficulties: [-1]
      }
    }
    global_random_rotation_range_per_object: [0, 0]
    rate: 1.0
  }

  remove_unknown_examples: false
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_train.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

train_config: {
  optimizer: {
    adam_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate: {
          initial_learning_rate: 0.0002
          decay_steps: 27840 # 1856 steps per epoch * 15 epochs
          decay_factor: 0.8
          staircase: true
        }
      }
      weight_decay: 0.0001
    }
    use_moving_average: false

  }
  inter_op_parallelism_threads: 4
  intra_op_parallelism_threads: 4
  steps: 296960 # 1856 steps per epoch * 160 epochs
  steps_per_eval: 9280 # 1856 steps per epoch * 5 epochs
  save_checkpoints_secs : 1800 # half hour
  save_summary_steps : 10
  enable_mixed_precision: false
  loss_scale_factor : 512.0
  clear_metrics_every_epoch: false
}

eval_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_val.tfrecord"
  class_names: ["Car"]
  batch_size: 2
  max_num_epochs : 160
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: false
  num_workers: 3
  anchor_area_threshold: 1
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_val.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

step=50, steptime=0.507, cls_loss=3.83, cls_loss_rt=0.665, loc_loss=2.32, loc_loss_rt=1.08, rpn_acc=0.978, prec@10=0.0044, rec@10=0.793, prec@30=0.003, rec@30=0.0905, prec@50=0.00359, rec@50=0.0184, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0389, 0.0409, 0.146, 0.0349, 0.0484, 0.0401, 0.189], loss.cls_pos_rt=0.419, loss.cls_neg_rt=0.246, loss.dir_rt=0.686, num_vox=10189, num_pos=84, num_neg=35401, num_anchors=35610, lr=0.0002, image_idx=3013
model: {
  second: {
    voxel_generator {
      point_cloud_range : [0, -39.68, -3, 69.12, 39.68, 1]
      voxel_size : [0.16, 0.16, 4]
      max_number_of_points_per_voxel : 100
    }
    num_class: 1
    voxel_feature_extractor: {
      module_class_name: "PillarFeatureNet"
      num_filters: [64]
      with_distance: false
    }
    middle_feature_extractor: {
      module_class_name: "PointPillarsScatter"
    }
    rpn: {
      module_class_name: "RPN"
      layer_nums: [3, 5, 5]
      layer_strides: [2, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [1, 2, 4]
      num_upsample_filters: [128, 128, 128]
      use_groupnorm: false
      num_groups: 32
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true

    use_direction_classifier: true
    direction_loss_weight: 0.2
    use_aux_classifier: false
    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [0, -39.68, -5, 69.12, 39.68, 5]
    use_rotate_nms: false
    use_multi_class_nms: false
    nms_pre_max_size: 1000
    nms_post_max_size: 300
    nms_score_threshold: 0.05
    nms_iou_threshold: 0.5

    use_bev: false
    num_point_features: 4
    without_reflectivity: false
    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      anchor_generators: {
         anchor_generator_stride: {
           sizes: [1.6, 3.9, 1.56] # wlh
           strides: [0.32, 0.32, 0.0] # if generate only 1 z_center, z_stride will be ignored
           offsets: [0.16, -39.52, -1.78] # origin_offset + strides / 2
           rotations: [0, 1.57] # 0, pi/2
           matched_threshold : 0.6
           unmatched_threshold : 0.45
         }
       }

      sample_positive_fraction : -1
      sample_size : 512
      region_similarity_calculator: {
        nearest_iou_similarity: {
        }
      }
    }
  }
}


train_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_train.tfrecord"
  class_names: ["Car"]
  max_num_epochs : 160
  batch_size: 2
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: true
  num_workers: 2
  groundtruth_localization_noise_std: [0.25, 0.25, 0.25]
  groundtruth_rotation_uniform_noise: [-0.15707963267, 0.15707963267]
  global_rotation_uniform_noise: [-0.78539816, 0.78539816]
  global_scaling_uniform_noise: [0.95, 1.05]
  global_random_rotation_range_per_object: [0, 0]
  anchor_area_threshold: 1
  remove_points_after_sample: false
  groundtruth_points_drop_percentage: 0.0
  groundtruth_drop_max_keep_points: 15
  database_sampler {
    database_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_dbinfos_train.pkl"
    sample_groups {
      name_to_max_num {
        key: "Car"
        value: 15
      }
    }
    database_prep_steps {
      filter_by_min_num_points {
        min_num_point_pairs {
          key: "Car"
          value: 5
        }
      }
    }
    database_prep_steps {
      filter_by_difficulty {
        removed_difficulties: [-1]
      }
    }
    global_random_rotation_range_per_object: [0, 0]
    rate: 1.0
  }

  remove_unknown_examples: false
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_train.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

train_config: {
  optimizer: {
    adam_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate: {
          initial_learning_rate: 0.0002
          decay_steps: 27840 # 1856 steps per epoch * 15 epochs
          decay_factor: 0.8
          staircase: true
        }
      }
      weight_decay: 0.0001
    }
    use_moving_average: false

  }
  inter_op_parallelism_threads: 4
  intra_op_parallelism_threads: 4
  steps: 296960 # 1856 steps per epoch * 160 epochs
  steps_per_eval: 9280 # 1856 steps per epoch * 5 epochs
  save_checkpoints_secs : 1800 # half hour
  save_summary_steps : 10
  enable_mixed_precision: false
  loss_scale_factor : 512.0
  clear_metrics_every_epoch: false
}

eval_input_reader: {
  record_file_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_val.tfrecord"
  class_names: ["Car"]
  batch_size: 2
  max_num_epochs : 160
  prefetch_size : 25
  max_number_of_voxels: 12000
  shuffle_points: false
  num_workers: 3
  anchor_area_threshold: 1
  remove_environment: false
  kitti_info_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar/kitti_infos_val.pkl"
  kitti_root_path: "/home/ubuntu/leo_jim/second.pytorch/second/data/sets/kitti_pillar"
}

step=50, steptime=0.514, cls_loss=2.93, cls_loss_rt=0.619, loc_loss=2.26, loc_loss_rt=1.76, rpn_acc=0.985, prec@10=0.00411, rec@10=0.728, prec@30=0.00323, rec@30=0.0782, prec@50=0.00414, rec@50=0.0135, prec@70=0.0, rec@70=0.0, prec@80=0.0, rec@80=0.0, prec@90=0.0, rec@90=0.0, prec@95=0.0, rec@95=0.0, loss.loc_elem=[0.0506, 0.0431, 0.173, 0.0673, 0.0829, 0.0431, 0.42], loss.cls_pos_rt=0.532, loss.cls_neg_rt=0.0865, loss.dir_rt=0.679, num_vox=10991, num_pos=78, num_neg=30068, num_anchors=30268, lr=0.0002, image_idx=793
